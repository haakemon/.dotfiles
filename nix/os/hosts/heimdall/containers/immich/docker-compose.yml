networks:
  default:
    driver: bridge

volumes:
  immich-model-cache:

services:
  immich-server:
    container_name: immich_server
    image: ghcr.io/immich-app/immich-server:v2.0.1@sha256:8286638680f0a38a7cb380be64ed77d1d1cfe6d0e0b843f64bff92b24289078d
    restart: unless-stopped
    environment:
      TZ: $TZ
      TIME_ZONE: $TZ
      IMMICH_WORKERS_INCLUDE: 'api'
    volumes:
      - $UPLOAD_LOCATION:/data
      - /etc/localtime:/etc/localtime:ro
    env_file:
      - .env
    ports:
      - 127.0.0.1:2342:2283
    depends_on:
      - redis
      - database
    healthcheck:
      disable: false

  immich-microservices:
    restart: unless-stopped
    environment:
      TZ: $TZ
      TIME_ZONE: $TZ
      IMMICH_WORKERS_EXCLUDE: 'api'
    container_name: immich_microservices
    image: ghcr.io/immich-app/immich-server:v2.0.1@sha256:8286638680f0a38a7cb380be64ed77d1d1cfe6d0e0b843f64bff92b24289078d
    volumes:
      - $UPLOAD_LOCATION:/data
      - /etc/localtime:/etc/localtime:ro
    env_file:
      - .env
    depends_on:
      - redis
      - database
    healthcheck:
      disable: false

  immich-machine-learning:
    container_name: immich_machine_learning
    image: ghcr.io/immich-app/immich-machine-learning:v2.0.1@sha256:45626a33361ef7ed361de41b0d2dc19e5949442cdf0a8eb64b157dc8a04e9855
    restart: unless-stopped
    environment:
      TZ: $TZ
      TIME_ZONE: $TZ
    volumes:
      - immich-model-cache:/cache
    env_file:
      - .env
    healthcheck:
      disable: false

  redis:
    container_name: immich_redis
    image: docker.io/valkey/valkey:8-bookworm@sha256:fea8b3e67b15729d4bb70589eb03367bab9ad1ee89c876f54327fc7c6e618571
    restart: unless-stopped
    environment:
      TZ: $TZ
      TIME_ZONE: $TZ
    healthcheck:
      test: redis-cli ping || exit 1

  database:
    container_name: immich_postgres
    image: ghcr.io/immich-app/postgres:14-vectorchord0.4.3-pgvectors0.2.0@sha256:bcf63357191b76a916ae5eb93464d65c07511da41e3bf7a8416db519b40b1c23
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_DB: ${DB_DATABASE_NAME}
      POSTGRES_INITDB_ARGS: '--data-checksums'
      TZ: $TZ
      TIME_ZONE: $TZ
    volumes:
      - ${DB_DATA_LOCATION}:/var/lib/postgresql/data
