networks:
  default:
    driver: bridge

volumes:
  immich-model-cache:

services:
  immich-server:
    container_name: immich_server
    image: ghcr.io/immich-app/immich-server:v1.137.3@sha256:e517f806457057d44695152a0af2dfa094225a7d85eb37f518925e68864c658d
    restart: unless-stopped
    environment:
      TZ: $TZ
      TIME_ZONE: $TZ
      IMMICH_WORKERS_INCLUDE: 'api'
    volumes:
      - $UPLOAD_LOCATION:/usr/src/app/upload
      - /etc/localtime:/etc/localtime:ro
    env_file:
      - .env
    ports:
      - 127.0.0.1:2342:2283
    depends_on:
      - redis
      - database
    healthcheck:
      disable: false

  immich-microservices:
    restart: unless-stopped
    environment:
      TZ: $TZ
      TIME_ZONE: $TZ
      IMMICH_WORKERS_EXCLUDE: 'api'
    container_name: immich_microservices
    image: ghcr.io/immich-app/immich-server:v1.137.3@sha256:e517f806457057d44695152a0af2dfa094225a7d85eb37f518925e68864c658d
    volumes:
      - $UPLOAD_LOCATION:/usr/src/app/upload
      - /etc/localtime:/etc/localtime:ro
    env_file:
      - .env
    depends_on:
      - redis
      - database
    healthcheck:
      disable: false

  immich-machine-learning:
    container_name: immich_machine_learning
    image: ghcr.io/immich-app/immich-machine-learning:v1.137.3@sha256:ef517c041fa4a6a84a6c3c4f88a1124058e686c9c92bf09a973e7e60c3c3ea1e
    restart: unless-stopped
    environment:
      TZ: $TZ
      TIME_ZONE: $TZ
    volumes:
      - immich-model-cache:/cache
    env_file:
      - .env
    healthcheck:
      disable: false

  redis:
    container_name: immich_redis
    image: docker.io/valkey/valkey:8-bookworm@sha256:a137a2b60aca1a75130022d6bb96af423fefae4eb55faf395732db3544803280
    restart: unless-stopped
    environment:
      TZ: $TZ
      TIME_ZONE: $TZ
    healthcheck:
      test: redis-cli ping || exit 1

  database:
    container_name: immich_postgres
    image: ghcr.io/immich-app/postgres:14-vectorchord0.4.3-pgvectors0.2.0@sha256:32324a2f41df5de9efe1af166b7008c3f55646f8d0e00d9550c16c9822366b4a
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_DB: ${DB_DATABASE_NAME}
      POSTGRES_INITDB_ARGS: '--data-checksums'
      TZ: $TZ
      TIME_ZONE: $TZ
    volumes:
      - ${DB_DATA_LOCATION}:/var/lib/postgresql/data
