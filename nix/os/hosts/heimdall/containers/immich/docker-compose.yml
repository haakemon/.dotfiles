networks:
  default:
    driver: bridge

volumes:
  immich-model-cache:

services:
  immich-server:
    container_name: immich_server
    image: ghcr.io/immich-app/immich-server:v1.135.3@sha256:df5bbf4e29eff4688063a005708f8b96f13073200b4a7378f7661568459b31e9
    restart: unless-stopped
    environment:
      TZ: $TZ
      TIME_ZONE: $TZ
      IMMICH_WORKERS_INCLUDE: 'api'
    volumes:
      - $UPLOAD_LOCATION:/usr/src/app/upload
      - /etc/localtime:/etc/localtime:ro
    env_file:
      - .env
    ports:
      - 127.0.0.1:2342:2283
    depends_on:
      - redis
      - database
    healthcheck:
      disable: false

  immich-microservices:
    restart: unless-stopped
    environment:
      TZ: $TZ
      TIME_ZONE: $TZ
      IMMICH_WORKERS_EXCLUDE: 'api'
    container_name: immich_microservices
    image: ghcr.io/immich-app/immich-server:v1.135.3@sha256:df5bbf4e29eff4688063a005708f8b96f13073200b4a7378f7661568459b31e9
    volumes:
      - $UPLOAD_LOCATION:/usr/src/app/upload
      - /etc/localtime:/etc/localtime:ro
    env_file:
      - .env
    depends_on:
      - redis
      - database
    healthcheck:
      disable: false

  immich-machine-learning:
    container_name: immich_machine_learning
    image: ghcr.io/immich-app/immich-machine-learning:v1.135.3@sha256:9f2f61d86af82d04926f9b896c995c502303052905517c5485dd26bf1e42a44e
    restart: unless-stopped
    environment:
      TZ: $TZ
      TIME_ZONE: $TZ
    volumes:
      - immich-model-cache:/cache
    env_file:
      - .env
    healthcheck:
      disable: false

  redis:
    container_name: immich_redis
    image: docker.io/valkey/valkey:8-bookworm@sha256:fec42f399876eb6faf9e008570597741c87ff7662a54185593e74b09ce83d177
    restart: unless-stopped
    environment:
      TZ: $TZ
      TIME_ZONE: $TZ
    healthcheck:
      test: redis-cli ping || exit 1

  database:
    container_name: immich_postgres
    image: ghcr.io/immich-app/postgres:14-vectorchord0.4.3-pgvectors0.2.0@sha256:5f6a838e4e44c8e0e019d0ebfe3ee8952b69afc2809b2c25f7b0119641978e91
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_DB: ${DB_DATABASE_NAME}
      POSTGRES_INITDB_ARGS: '--data-checksums'
      TZ: $TZ
      TIME_ZONE: $TZ
    volumes:
      - ${DB_DATA_LOCATION}:/var/lib/postgresql/data
